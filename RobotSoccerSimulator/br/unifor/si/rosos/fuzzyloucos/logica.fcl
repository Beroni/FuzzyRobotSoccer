/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates tip based on 'servie' and 'food'

	If you want to about this example (and fuzzy logic), please 
	read Matlab's tutorial on fuzzy logic toolbox 
	http://www.mathworks.com/access/helpdesk/help/pdf_doc/fuzzy/fuzzy.pdf

									Pablo Cingolani 
									pcingola@users.sourceforge.net
*/

FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	posX : REAL;
	posY : REAL;
	ballX : REAL;
	varBallX : REAL;
	ballY: REAL;
	myGolSide: REAL;
	
END_VAR

VAR_OUTPUT				// Define output variable
	outX : REAL;
	outY : REAL;
END_VAR

FUZZIFY varBallX			
	TERM atras := (-3, 1) (-0.2,1) (0, 0)(2, 0); 
	TERM frente :=(-2, 0)(0,0)(0.2,1)(3,1);
	TERM pertoFrenteDir := TRAPE 0 0 0.1 0.25;
	TERM pertoFrenteEsq := TRAPE -0.25 -0.1 0 0;
END_FUZZIFY 

FUZZIFY myGolSide			
	TERM esq := (0.2, 1) (1,1) (1.1, 0) (2.5, 0); 
	TERM dir := (0.2, 0) (1,0) (1.1, 1) (2.5, 1);
END_FUZZIFY

FUZZIFY posY			
	TERM centro := (0,0)(0.57,0)(0.7,1) (1.3,1)(1.4,0)(2,0); 
	TERM esq := (0,1)(0.57,1)(0.7,0);
	TERM dir := (1.3,0)(1.4,1)(1.6,1);
END_FUZZIFY

FUZZIFY posX
	TERM fundoEsq := (0,1)(0.33,1)(0.36,0);			
	TERM golEsq := (0.2,0)(0.32,0)(0.36, 1) (0.7, 1) (0.8,0);
	TERM meio := (0.7,0)(0.9, 1) (2.3,1)(2.5,0);
	TERM golDir := (2.4,0)(2.45, 1) (2.8,1)(2.85,0);
	TERM fundoDir := (2.78,0)(2.83, 1)(3.5,1);
END_FUZZIFY

FUZZIFY ballX
	TERM golEsq := (0.2,0)(0.32,0)(0.36, 1) (0.7, 1) (0.8,0);		 
	TERM pertoEsq := (0.4, 0) (0.7,1) (0.9,0);
	TERM regular := (0.8, 0) (1,1) (2.1,1)(2.4,0);
	TERM pertoDir := (2.3, 0) (2.6,1) (2.8,0);
	TERM golDir := (2.35,0)(2.4,1) (2.8,1)(2.85,0);
END_FUZZIFY

FUZZIFY ballY		
	TERM esq := TRAPE -5 -3 -0.7 0;
	TERM pertoEsq := TRAPE -0.5 -0.2 -0.1 0;
	TERM centro := TRAPE -0.1 -0.05 0.05 0.1;
	TERM dir := TRAPE 0 0.7 3 5;
	TERM pertoDir := TRAPE 0 0.1 0.2 0.5;
END_FUZZIFY

DEFUZZIFY outX
	TERM frente := (0,0) (0.7,1);	
	TERM tras := (-0.7,1) (0,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY outY
	TERM dir := (0,0) (0.5,1);
	TERM neutro := (-0.01,0)(0,1)(0.01,0);
	TERM esq := (-0.5,1) (0,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	//Regras para não sair no gol esquerdo
	RULE 1 : IF posY IS esq AND myGolSide IS esq THEN outY IS dir;
	RULE 2 : IF posY IS dir AND myGolSide IS esq THEN outY IS esq;
	RULE 3 : IF posX IS fundoEsq AND myGolSide IS esq THEN outX IS frente;
	
	//Regras par não sair no gol direito
	RULE 4 : IF posY IS esq AND myGolSide IS dir THEN outY IS dir;
	RULE 5 : IF posY IS dir AND myGolSide IS dir THEN outY IS esq;
	RULE 6 : IF posX IS fundoDir AND myGolSide IS dir THEN outX IS tras;
	
	//Regras para seguir a bola
	RULE 7 : IF ballY IS esq AND posY IS centro THEN  outY IS esq;
	RULE 8 : IF ballY IS dir AND posY IS centro THEN outY IS dir;
	
	//Regras para seguir a bola (caso seja ultrapassado)
	RULE 9 : IF ballX IS pertoEsq  AND posX IS golEsq AND varBallX IS atras AND posX IS NOT fundoEsq THEN outX IS tras;
	RULE 10 : IF ballX IS pertoDir  AND posX IS golDir AND varBallX IS frente AND posX IS NOT fundoDir THEN outX IS frente;
	
	//Regras para atacar a bola
	RULE 11: IF varBallX IS frente AND posX IS golEsq AND ballY IS centro AND ballX IS golEsq THEN outX IS frente;
	RULE 12: IF varBallX IS pertoFrenteDir AND posX IS golEsq AND ballY IS centro THEN outX IS frente;
	
	RULE 13: IF varBallX IS atras AND posX IS golDir AND ballY IS centro AND ballX IS golDir THEN outX IS tras;
	RULE 14: IF varBallX IS pertoFrenteEsq AND posX IS golDir AND ballY IS centro THEN outX IS tras;

	
	//Regras para ir pro gol esquerdo
	RULE 15 : IF posX IS NOT golEsq AND posX IS NOT fundoEsq AND myGolSide IS esq THEN outX IS tras;
	
	//Regras para ir para o gol direito
	RULE 16: IF posX IS NOT golDir AND posX IS NOT fundoEsq AND myGolSide IS dir THEN outX IS frente;
	
	
	
END_RULEBLOCK

END_FUNCTION_BLOCK