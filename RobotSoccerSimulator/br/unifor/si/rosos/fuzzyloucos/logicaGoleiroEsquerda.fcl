/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates tip based on 'servie' and 'food'

	If you want to about this example (and fuzzy logic), please 
	read Matlab's tutorial on fuzzy logic toolbox 
	http://www.mathworks.com/access/helpdesk/help/pdf_doc/fuzzy/fuzzy.pdf

									Pablo Cingolani 
									pcingola@users.sourceforge.net
*/

FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	posX : REAL;
	posY : REAL;
	ballX : REAL;
	varBallX : REAL;
	ballY: REAL;
	myGolSide: REAL;
	varAdvBallX: REAL;
	
END_VAR

VAR_OUTPUT				// Define output variable
	outX : REAL;
	outY : REAL;
END_VAR

FUZZIFY varBallX			
	TERM atras := (-3, 1) (-0.2,1) (0, 0)(2, 0); 
	TERM frente :=(-2, 0)(0,0)(0.2,1)(3,1);
	TERM centro := TRAPE  -0.08 -0.05 0.05 0.08;
END_FUZZIFY 

FUZZIFY varAdvBallX			
	TERM bolaAEsq := (-3, 1) (-0.2,1) (0, 0)(2, 0); 
	TERM bolaADir :=(-2, 0)(0,0)(0.2,1)(3,1);
END_FUZZIFY

FUZZIFY myGolSide			
	TERM esq := (0.2, 1) (1,1) (1.1, 0) (2.5, 0); 
	TERM dir := (0.2, 0) (1,0) (1.1, 1) (2.5, 1);
END_FUZZIFY

FUZZIFY posY			
	TERM centro := (0.57,0)(0.7,1)(1.3,1)(1.4,0); 
	TERM esq := (0,1)(0.57,1)(0.7,0);
	TERM dir := (1.3,0)(1.4,1)(2,1);
	TERM latDir := TRAPE  1.69 1.79 2.04 2.04;
	TERM latEsq := TRAPE 0 0 0.25 0.35;
END_FUZZIFY

FUZZIFY posX
	TERM fundoEsq := (0,1)(0.33,1)(0.36,0);			
	TERM golEsq := (0.2,0)(0.32,0)(0.36, 1) (0.7, 1) (0.8,0);
	TERM meio := (0.7,0)(0.9, 1) (2.3,1)(2.5,0);
	TERM golDir := (2.4,0)(2.45, 1) (2.8,1)(2.85,0);
	TERM fundoDir := (2.78,0)(2.83, 1)(3.5,1);
END_FUZZIFY

FUZZIFY ballX
	TERM golEsq := (0.2,0)(0.32,0)(0.36, 1) (0.7, 1) (0.8,0);		 
	TERM regular := (0.8, 0) (1,1) (2.1,1)(2.4,0);
	TERM golDir := (2.35,0)(2.4,1) (2.8,1)(2.85,0);
END_FUZZIFY

FUZZIFY ballY		
	TERM esq := TRAPE -4 -3 -0.9 0.0;
	TERM centro := TRAPE -0.1 -0.05 0.05 0.1;
	TERM dir := TRAPE 0.0 0.9 3 4;
END_FUZZIFY

DEFUZZIFY outX
	TERM frente := (0,0) (0.65,1);	
	TERM tras := (-0.65,1) (0,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY outY
	TERM dir := (0,0) (0.4,1);
	TERM centro := TRAPE -0.1 -0.05 0.05 0.1;
	TERM esq := (-0.4,1) (0,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	//Regras para não sair no gol esquerdo
	RULE 1 : IF posY IS esq AND myGolSide IS esq AND varAdvBallX IS bolaAEsq THEN outY IS dir;
	RULE 2 : IF posY IS dir AND myGolSide IS esq AND varAdvBallX IS bolaAEsq THEN outY IS esq;
	RULE 3 : IF posX IS fundoEsq THEN outX IS frente;
	
	//Regras par não sair no gol direito
	RULE 4 : IF posY IS esq AND myGolSide IS dir AND varAdvBallX IS bolaADir THEN outY IS dir;
	RULE 5 : IF posY IS dir AND myGolSide IS dir AND varAdvBallX IS bolaADir THEN outY IS esq;
	RULE 6 : IF posX IS fundoDir THEN outX IS tras;
	
	//Regras para não sair na lateral
	RULE 7 : IF posY IS latEsq THEN outY IS dir;
	RULE 8 : IF posY IS latDir THEN outY IS esq;
	
	//Regras para seguir a bola
	RULE 9 : IF ballY IS esq AND posY IS centro THEN  outY IS esq;
	RULE 10 : IF ballY IS dir AND posY IS centro THEN outY IS dir;
	
	//Regras para seguir a bola (caso seja ultrapassado)
	RULE 11 : IF ballX IS golEsq  AND posX IS golEsq AND varBallX IS atras AND posX IS NOT fundoEsq THEN outX IS tras;
	RULE 12 : IF ballX IS golDir  AND posX IS golDir AND varBallX IS frente AND posX IS NOT fundoDir THEN outX IS frente;
	
	//Regras para atacar a bola
	RULE 13: IF varBallX IS frente AND posX IS golEsq AND ballY IS centro AND ballX IS golEsq AND myGolSide IS esq THEN outX IS frente;
	//RULE 12: IF varBallX IS frente AND posX IS golEsq AND ballY IS centro THEN outX IS frente;
	
	RULE 14: IF varBallX IS atras AND posX IS golDir AND ballY IS centro AND ballX IS golDir AND myGolSide IS dir THEN outX IS tras;
	//RULE 14: IF varBallX IS pertoFrenteEsq AND posX IS golDir AND ballY IS centro THEN outX IS tras;

	//Regras para contra atacar
		//Mover para a esquerda e a direita 
	RULE 15: IF varBallX IS frente AND ballY IS esq AND myGolSide IS esq AND varAdvBallX IS bolaADir THEN outY IS esq;
	RULE 16: IF varBallX IS frente AND ballY IS dir AND myGolSide IS esq AND varAdvBallX IS bolaADir THEN outY IS dir;
	
	RULE 17: IF varBallX IS atras AND ballY IS esq AND myGolSide IS dir AND varAdvBallX IS bolaAEsq THEN outY IS esq;
	RULE 18: IF varBallX IS atras AND ballY IS dir AND myGolSide IS dir AND varAdvBallX IS bolaAEsq THEN outY IS dir;
	
		//Mover pra frente
	RULE 19: IF varBallX IS frente AND myGolSide IS esq AND varAdvBallX IS bolaADir THEN outX IS frente;
	RULE 20: IF varBallX IS atras AND myGolSide IS dir AND varAdvBallX IS bolaAEsq THEN outX IS tras;
	
		//Mover pra trás
	RULE 21: IF varBallX IS centro AND myGolSide IS esq AND varAdvBallX IS bolaADir  THEN outX IS tras;
	RULE 22: IF varBallX IS centro AND myGolSide IS dir AND varAdvBallX IS bolaAEsq  THEN outX IS frente;
	
	//Regras para ir pro gol esquerdo
	RULE 23 : IF posX IS NOT golEsq AND posX IS NOT fundoEsq AND myGolSide IS esq AND varAdvBallX IS bolaAEsq AND ballY IS NOT centro  THEN outX IS tras;
	
	RULE 24 : IF posX IS NOT golEsq AND posX IS NOT fundoEsq AND myGolSide IS esq AND varAdvBallX IS bolaAEsq AND ballY IS centro AND varBallX IS atras THEN outY IS dir;
	
	RULE 25 : IF posX IS NOT golEsq AND posX IS NOT fundoEsq AND myGolSide IS esq AND varBallX IS atras AND ballY IS NOT centro  THEN outX IS tras;
	
	//Regras para ir para o gol direito
	RULE 26: IF posX IS NOT golDir AND posX IS NOT fundoDir AND myGolSide IS dir AND varAdvBallX IS bolaADir AND ballY IS NOT centro  THEN outX IS frente;
	
	RULE 27: IF posX IS NOT golDir AND posX IS NOT fundoDir AND myGolSide IS dir AND varAdvBallX IS bolaADir AND ballY IS centro AND varBallX IS frente THEN outY IS dir;
	
	RULE 28: IF posX IS NOT golDir AND posX IS NOT fundoDir AND myGolSide IS dir AND varBallX IS frente AND ballY IS NOT centro  THEN outX IS frente;
	
	//
END_RULEBLOCK

END_FUNCTION_BLOCK